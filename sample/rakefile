# modify the following line to point to the location of mfweb
MFWEB_DIR = '../'

BUILD_DIR = 'build/'            # location of html output
CSS_PATHS = %w[css ../css]      # path for finding SCSS files

$: << MFWEB_DIR + 'lib' << 'lib'      # add mfweb and local lib to ruby search path
verbose(true)

# define clobber task to delete output directory
require 'rake/clean'
CLOBBER.include BUILD_DIR

# default task deletes build directory and rebuilds it
task :default => [:clobber, :articles, :home]

# replace default task with following line to avoid clean rebuilds of output
# task :default => [:articles]

# define the articles task
desc "build articles"
task :articles

require 'mfweb/article'
require 'sampleSite'
Mfweb::Core::Site.init(SampleSite.new)

# build article css file from sass source
sassTask '../css/article.scss', 'articles', :articles

# For simple articles, you need the following block in the rakefile
build_simple_articles


# For flexible articles you need something like this, modified to suit.
FileList['articles/flexible/flexible-article.xml'].each do |src|
	target = File.join(BUILD_DIR + 'articles', 'flexible.html')
	file target => [src] do
    skeleton = Mfweb::Core::Site.skeleton.with_css('flexible.css')
    transformer = './articles/flexible/flexible.rb'
    require transformer
		maker = Mfweb::Article::ArticleMaker.new(src, target, skeleton, FlexibleTr)
		maker.code_server = Mfweb::Article::CodeServer.new 'articles/flexible/code/'
    
    # need to set up the demonstration of these
    #maker.bib_server = Bibliography.new 'bib.xml'
		#footnotes
    # images
    maker.run
	end
	task :articles => target
  sassTask 'articles/flexible/flexible.scss', 'articles', :articles
  copyGraphicsTask 'articles/flexible', 'articles/flexible', :articles
end

require 'mfweb/infodeck/infodeck.rake'

desc "run webrick server on build directory"
task :server do
  require 'webrick'
  include WEBrick

  port = 2929

  puts "URL: http://#{Socket.gethostname}:#{port}"
  mime_types = WEBrick::HTTPUtils::DefaultMimeTypes
  mime_types.store 'js', 'application/javascript'
  mime_types.store 'svg', 'image/svg+xml'

  s = HTTPServer.new(:Port            => port,
                     :MimeTypes => mime_types,
                     :DocumentRoot    => BUILD_DIR)

  trap("INT"){ s.shutdown }
  s.start
end

home_page =  BUILD_DIR + 'index.html'
task :home => home_page
file home_page do |t|
  # a very crude home page
  File.open(t.name, 'w') do |f|
    f << "<h1>A crude home page</h1>"
    f << "<ul>"
    f << "<li><a href = 'articles/simpleArticle.html'>Simple</a></li>"
    f << "<li><a href = 'articles/flexible.html'>Flexible</a></li>"
    f << "</ul>"
  end
end
