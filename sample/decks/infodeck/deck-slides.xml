  <slide id="deck">
    <lede>A deck file contains slides and includes other decks</lede>
    <tile class="body">
      <p>The layout and text content is defined by a series of xml
      files. One file is the root of this content - this is usually
      called <code>deck.xml</code> (this can be changed by changing
      the <code>rake.rb</code> file.)</p>
      <p>Each xml file contains a <code>&lt;deck></code> element as
      its root. The root deck's deck element should have a
      <code>title</code> attribute which will set the title of the
      generated html document (this will appear in the tab or title
      bar of the browser.</p>
    </tile>
    <tile class="body" left="600">
      <p>The deck element contains various elements which I call
      deck-contents. The two most important of these are slides and
      other decks. </p>
      <p>A slide represents a single slide in the deck. Each slide
      must have an <code>id</code> attribute, which must be unique
      within the deck. The slide's id can be used in a URL to deep
      link into the deck, it's also useful for slide-specific CSS
      rules.</p>
      <p>Nested deck elements allow you include other xml files. A nested
      deck element must have a <code>src</code> attribute
      specifying the path to another xml file. The slides inside
      that file are then included into the deck at the position of
      that deck element. (Any attributes of the included file's
      deck element, such as a title, are ignored). Nesting decks
      like this allows you to break up a big deck into multiple
      files. (Potentially it may also allow to reuse sequences of
      slides between decks - although I haven't tried to do that
      yet.)</p>
    </tile>
    <tile bottom="10" left="100" width="400" class="sidebar">
      <p>As well as learning about the structure of decks through
      this narrative description and the slide soures, you can also
      take a look at a formal grammar. </p>
      <p>There is a schema for decks using <a href = "http://www.relaxng.org/compact-tutorial-20030326.html">RELAX NG compact syntax</a>
        (which is very readable, similar to a grammar) at
        <code>mfweb-dir/lib/infodeck/deck.rnc</code>. I keep this up
        to date so you can see all the legal combinations of tags. If you use
        emacs you can use this file to edit deck files in a
        schema-aware manner using <a href = "http://www.thaiopensource.com/nxml-mode/">nxml-mode</a> (as I do).</p>
    </tile>
  </slide>